---

- name: Semaphore | Debian | Service user
  ansible.builtin.user:
    name: "{{ SEM_HC.user }}"
    state: present
  when: SEM_CONFIG.manage.user | bool

- name: Semaphore | Debian | Checking if semaphore is installed
  ansible.builtin.stat:
    path: "{{ SEM_HC.bin }}"
  register: sem_cur_bin

- name: Semaphore | Debian | Pulling semaphore version
  ansible.builtin.command: "{{ SEM_HC.bin }} version"
  register: sem_cur_version
  when: sem_cur_bin.stat.exists

- name: "Semaphore | Debian | Installing version {{ SEM_CONFIG.version }}"
  block:
  - name: Semaphore | Debian | Creating download directory
    ansible.builtin.tempfile:
      state: directory
    register: sem_dl_dir

  - name: Semaphore | Debian | Downloading
    ansible.builtin.unarchive:
      src: "{{ SEM_HC.dl_tmpl | replace('%s', SEM_CONFIG.version) }}"
      dest: "{{ sem_dl_dir.path }}"
      remote_src: true

  - name: Semaphore | Debian | Installing
    ansible.builtin.copy:
      src: "{{ sem_dl_dir.path }}/semaphore"
      remote_src: true
      dest: "{{ SEM_HC.bin }}"
      owner: root
      group: "{{ SEM_HC.user }}"
      mode: 0750
  when: >
    not sem_cur_bin.stat.exists or
    sem_cur_version.stdout != 'v' + SEM_CONFIG.version

- name: Semaphore | Debian | Managing database
  ansible.builtin.include_role:
    name: ansibleguy.infra_mariadb
  vars:
    mariadb:
      instances:
        zoneminder: "{{ ZM_MARIADB_INSTANCE }}"
  args:
    apply:
      tags: database
  when: SEM_CONFIG.manage.database | bool
  tags: database

- name: Semaphore | Debian | Unmanaged DB
  ansible.builtin.pause:
    prompt: 'Since this role is not managing the semaphore-database, you will need to install and configure it manually!
    Make sure the database is reachable before continuing!'
  when: not SEM_CONFIG.manage.database | bool

- name: Semaphore | Debian | Configuring Nginx webserver
  ansible.builtin.include_role:
    name: ansibleguy.infra_nginx
  vars:
    nginx:
      sites:
        semaphore: "{{ SEM_CONFIG.nginx }}"
  when: SEM_CONFIG.manage.webserver | bool
  tags: webserver
  args:
    apply:
      tags: webserver
