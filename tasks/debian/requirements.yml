---

- name: Semaphore | Requirements | Installing python3-pip
  ansible.builtin.apt:
    name: 'python3-pip'
    state: present

- name: Semaphore | Requirements | Installing python3-virtualenv
  ansible.builtin.pip:
    name: 'virtualenv'
    state: present

- name: Semaphore | Requirements | Writing pip-requirements to file
  ansible.builtin.copy:
    content: |
      # ansible_managed
      # semaphore pip requirements

      {% for module in SEM_CONFIG.requirements.pip %}
      {{ module }}
      {% endfor %}

    dest: "{{ SEM_HC.req_prefix }}pip.txt"
    mode: 0640
    owner: 'root'
    group: "{{ SEM_HC.user }}"

- name: Semaphore | Requirements | Installing python3 modules into venv
  ansible.builtin.pip:
    requirements: "{{ SEM_HC.req_prefix }}pip.txt"
    virtualenv: "{{ SEM_CONFIG.path.venv }}"
    state: present

- name: Semaphore | Requirements | Persistent requirements
  ansible.builtin.import_tasks: requirements_persistent.yml
  when:
    - SEM_CONFIG.persistent_requirements | bool
    - SEM_CONFIG.requirements.pip | length > 0 or SEM_CONFIG.requirements.collections | length > 0 or SEM_CONFIG.requirements.roles | length > 0

- name: Semaphore | Persistent-Requirements | Disabling Updater
  ansible.builtin.systemd:
    name: "{{ SEM_HC.service_req }}.timer"
    enabled: false
    state: stopped
  when: not SEM_CONFIG.persistent_requirements | bool
  register: sem_dis_update
  failed_when:
    - sem_dis_update.failed
    - "'does not exist' not in sem_dis_update.msg"
    - "'Could not find' not in sem_dis_update.msg"

- name: Semaphore | Requirements | Updating venv ownership
  ansible.builtin.file:
    path: "{{ SEM_CONFIG.path.venv }}"
    state: directory
    owner: 'root'
    group: "{{ SEM_HC.user }}"
    recurse: true
