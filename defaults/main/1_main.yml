---

no_prompts: false
debug: false

# default config => is overwritten by provided config
defaults_sem:
  manage:
    webserver: true  # install and configure local nginx with min-ca cert
    database: true  # install and configure local mariadb
    backup: true  # install service for daily local database backup (if database is managed)
    user: true  # create service-user 'semaphore'
    ansible_cfg: true  # provision /home/semaphore/.ansible.cfg
    admin: true

  version: '2.8.90'

  path:
    tmp: '/tmp/.semaphore'
    venv: '/var/local/lib/semaphore_venv'
    backup: '/var/backups/semaphore'

  persistent_requirements: false  # to speed up executions:
  #  install & update ansible-roles & ansible-collections using an external service/timer
  #  else semaphore will need to re-install them ON EACH EXECUTION
  #  for this to work - you will also have to make sure that the requirements files do not exist in your repositories:
  #    $REPO/collections/requirements.yml
  #    $REPO/roles/requirements.yml

  requirements:
    pip:
      - 'ansible'
      - 'netaddr'  # 'ansible.builtin.ipaddr' jinja-filter
      - 'jmespath'  # 'community.general.json_query' jinja-filter
    collections: []
    roles: []
    timer: '*-*-* 22:00:00'  # timer to execute requirements-update if 'persistent_requirements=true'; daily 22h

  admin:
    user: 'admin'
    name: ''  # defaults to admin.user
    email: 'admin@localhost'
    # default => random pwd will be generated
    pwd: "{{ lookup('password', tmp_pwd_file_prefix + '_admin chars=ascii_letters,digits length=' + random_pwd_length) }}"

  config:
    bolt: {}
    mysql:  # will be auto-generated by role if managed by it
      host: '127.0.0.1:3306'
      # user: ''  => database.user
      # pass: ''  => database.pwd
      # name: ''  => database.name
    postgres: {}
    dialect: 'mysql'
    port: ''  # default = using nginx-proxy-port
    interface: ''
    tmp_path: ''  # default = using path-tmp
    concurrency_mode: ''
    max_parallel_tasks: 0
    cookie_hash: ''
    cookie_encryption: ''
    access_key_encryption: ''
    email_sender: ''
    email_host: ''
    email_port: ''
    email_username: ''
    web_host: ''
    ldap_enable: false
    ldap_needtls: false
    ldap_binddn: ''
    ldap_bindpassword: ''
    ldap_server: ''
    ldap_searchdn: ''
    ldap_searchfilter: ''
    ldap_mappings:
      dn: ''
      mail: ''
      uid: ''
      cn: ''
    telegram_chat: ''
    telegram_token: ''
    slack_url: ''
    ssh_config_path: ''
    email_alert: false
    email_secure: false
    telegram_alert: false
    slack_alert: false
    demo_mode: false
    git_client: false

  ansible_config:  # ansible.cfg => https://docs.ansible.com/ansible/latest/reference_appendices/config.html
    defaults:  # section
      nocows: true
      # gather_subset
    privilege_escalation: {}
    colors: {}
    selinux: {}
    diff: {}
    galaxy: {}
    inventory: {}
    connection: {}
    persistent_connection: {}
    paramiko_connection: {}

  database:
    name: 'semaphore'
    user: 'semaphore'
    # default => random pwd will be generated
    pwd: "{{ lookup('password', tmp_pwd_file_prefix + '_mariadb chars=ascii_letters,digits length=' + random_pwd_length) }}"
    settings:  # mariadb setting overrides
      innodb_log_file_size: '256M'

    # ONLY CHANGE IF DB IS NOT MANAGED BY ROLE!
    update_password: 'on_create'  # or 'always'

  nginx:
    domain: ''
    port_plain: 80
    port_ssl: 443
    ssl:
      mode: 'ca'  # existing/selfsigned/ca/letsencrypt
      cert:
        name:
        cn: 'Semaphore Certificate'
        org: 'AnsibleGuy'

      letsencrypt:
        email: ''

    proxy:
      proto: 'http'
      port: 3000  # also in 'config_additions' below

    # see: https://docs.ansible-semaphore.com/administration-guide/security#ssl
    config_additions_root:
      - 'proxy_buffering off;'
      - 'proxy_request_buffering off;'

    config_additions:
      - 'chunked_transfer_encoding on;'
      - 'location /api/ws {'
      - '  proxy_pass http://127.0.0.1:3000/api/ws;'
      - '  proxy_http_version 1.1;'
      - '  proxy_set_header Upgrade $http_upgrade;'
      - '  proxy_set_header Connection "upgrade";'
      - '  proxy_set_header Origin "";'
      - '}'

    security:
      restrict_methods: false

  backup:
    path: '/var/backups/semaphore'
    retention_days: 14
    timer: '*-*-* 23:00:00'  # daily 23h

semaphore: {}
